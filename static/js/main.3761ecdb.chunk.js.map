{"version":3,"sources":["Components/header.js","Components/Recipe.js","Components/buttonInfo.js","Components/searchPage.js","Components/homePage.js","Components/notFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","customStyles","content","position","top","left","right","bottom","width","height","padding","transform","Recipe","props","cal","Math","floor","calories","React","useState","modalIsOpen","setIsOpen","closeModal","src","image","alt","title","onClick","isOpen","onRequestClose","style","contentLabel","ingredients","map","ingredient","key","text","href","url","rel","target","ButtonInfo","state","display","this","setState","e","toggleBox","aria-label","Component","Searcher","recipes","setRecipes","search","setSearch","query","setQuery","displayFormat","setDisplay","useEffect","getRecipes","a","async","fetch","response","json","data","hits","console","log","setTimeout","length","id","onSubmit","preventDefault","type","placeholder","value","onChange","recipe","label","window","scroll","behavior","smoothscroll","polyfill","HomePage","NotFoundPage","App","exact","path","component","color","background","time","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3761ecdb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"home__box__header\">\n      <div className=\"home__box__header-shadow\"></div>\n      <h1 className=\"home__box__header-title\">\n        <i className=\"fas fa-carrot\"></i>\n        goodfood.com\n      </h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nconst customStyles = {\n  content: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    width: \"80%\",\n    height: \"70%\",\n    padding: \"1rem\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\nfunction Recipe(props) {\n  const cal = Math.floor(props.calories) / 5;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <div className=\"recipe\">\n      <img className=\"recipe-img\" src={props.image} alt={props.title} />\n      <button onClick={openModal} className=\"recipe__buttonOpenModal\">\n        {props.title}\n      </button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <div className=\"recipe__modal__details\">\n          <button\n            onClick={closeModal}\n            className=\"recipe__modal__details-buttonCloseModal\"\n          >\n            X\n          </button>\n          <p className=\"recipe__modal__details-calories\">{cal} kcal</p>\n          <ul className=\"recipe__modal__details__list\">\n            {props.ingredients.map(ingredient => (\n              <li className=\"recipe__modal__details__list-item\" key={props.key}>\n                {ingredient.text}\n              </li>\n            ))}\n          </ul>\n          <a\n            href={props.url}\n            className=\"recipe__modal__details-url\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            show more\n          </a>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Recipe;\n","import React from \"react\";\n\nclass ButtonInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"none\"\n    };\n  }\n\n  toggleBox() {\n    this.setState({\n      display: this.state.display === \"none\" ? \"block\" : \"none\"\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"boxInfo\">\n          <p style={{ display: this.state.display }}>\n            this page can help you find a delicious dishes by ingredients which\n            you have in your kitchen! Just enter the name of the ingredients on the search bar. \n          </p>\n          <button className=\"buttonInfo\" onClick={e => this.toggleBox(e)} aria-label=\"click\">\n            click!\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ButtonInfo;\n","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport ButtonInfo from \"./buttonInfo\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nconst Searcher = () => {\n  const APP_ID = \"42af88ff\";\n  const APP_KEY = \"7c0c4172dfdd444e9a1822e1f76a2401\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"oil\");\n  const [displayFormat, setDisplay] = useState(\"none\");\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const scrollFunc = e => {\n    e.preventDefault();\n    window.scroll({ top: 0, left: 0, behavior: \"smooth\" });\n    smoothscroll.polyfill();\n  };\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n\n    setTimeout(() => {\n      if (data.hits.length >= 2) {\n        return setDisplay(\"block\");\n      } else {\n        return setDisplay(\"none\");\n      }\n    }, 500);\n  };\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  const checkValueInSearchBar = e => {\n    if (search === \"\") {\n      return setQuery(\"vegetarian\");\n    } else {\n      return setQuery(search);\n    }\n  };\n  return (\n    <>\n      <div className=\"search\" id=\"search\">\n        <form className=\"search__form\" onSubmit={getSearch}>\n          <input\n            type=\"text\"\n            placeholder=\"type ingredient or click loupe\"\n            className=\"search__form-bar\"\n            value={search}\n            onChange={updateSearch}\n          />\n          <button\n            type=\"submit\"\n            className=\"search__form-btn\"\n            aria-label=\"search\"\n            onClick={checkValueInSearchBar}\n          >\n            <i className=\"fas fa-search\"></i>\n          </button>\n        </form>\n        <ButtonInfo />\n        <div className=\"search__recipes\">\n          {recipes.map(recipe => (\n            <Recipe\n              key={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              title={recipe.recipe.label}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n              url={recipe.recipe.url}\n            />\n          ))}\n        </div>\n      </div>\n      <button\n        className=\"buttonToUp\"\n        style={{ display: displayFormat }}\n        onClick={scrollFunc}\n        aria-label=\"back to up\"\n      >\n        back to up\n      </button>\n    </>\n  );\n};\n\nexport default Searcher;\n","import React, { Component } from \"react\";\nimport Header from \"./header\";\nimport Searcher from \"./searchPage\";\n\n\nclass HomePage extends Component {\n  state = {\n    isOpen: false\n  };\n  render() {\n    return (\n      <div className=\"home__box\">\n        <Header />\n        <Searcher/>\n      </div>\n    );\n  }\n}\nexport default HomePage;","import React from \"react\";\nconst NotFoundPage = () => {\n  return (\n    <>\n      <div className=\"error\">\n        <h1 className=\"error-type\">Error 404 </h1>\n        <h2 className=\"error-text\">Ooops! Something went wrong. </h2>\n      </div>\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { Lines } from \"react-preloaders\";\nimport HomePage from \"./Components/homePage\";\nimport NotFoundPage from \"./Components/notFound\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </HashRouter>\n        <Lines color=\"#fff \" background=\"blur\" time={1000} />\n      </>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}